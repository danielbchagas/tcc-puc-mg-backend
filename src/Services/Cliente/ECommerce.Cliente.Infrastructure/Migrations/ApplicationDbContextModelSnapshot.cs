// <auto-generated />
using System;
using ECommerce.Cliente.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECommerce.Cliente.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("29ac2961-6aaf-4e62-bee7-036f2e0c163a"),
                            Ativo = true,
                            DataNascimento = new DateTime(1955, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Davi Giovanni Felipe",
                            Sobrenome = "Fernandes"
                        },
                        new
                        {
                            Id = new Guid("d84f5433-b284-46ba-872d-dd82136a4ae2"),
                            Ativo = true,
                            DataNascimento = new DateTime(1963, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Ayla Caroline",
                            Sobrenome = "Ana Gomes"
                        },
                        new
                        {
                            Id = new Guid("ff1c5c76-a8d9-46f8-9d3d-ffd0fd002742"),
                            Ativo = true,
                            DataNascimento = new DateTime(1975, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "BetinaFlávia",
                            Sobrenome = "Souza"
                        });
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Documentos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a491b5e9-d04c-4018-a2e9-72c6cbc00835"),
                            ClienteId = new Guid("29ac2961-6aaf-4e62-bee7-036f2e0c163a"),
                            Numero = "903.142.734-92"
                        },
                        new
                        {
                            Id = new Guid("245f234e-0aa8-43b4-af33-3c43f7c5335e"),
                            ClienteId = new Guid("d84f5433-b284-46ba-872d-dd82136a4ae2"),
                            Numero = "668.154.787-77"
                        },
                        new
                        {
                            Id = new Guid("c69b1337-777e-4aa4-9834-de33e1bd2d03"),
                            ClienteId = new Guid("ff1c5c76-a8d9-46f8-9d3d-ffd0fd002742"),
                            Numero = "345.712.047-10"
                        });
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Emails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d43686f-a66a-40e2-8f98-09831f48be79"),
                            ClienteId = new Guid("29ac2961-6aaf-4e62-bee7-036f2e0c163a"),
                            Endereco = "davi_giovanni_felipe@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("323afdd7-2c5b-4810-a687-c8fd64a274c4"),
                            ClienteId = new Guid("d84f5433-b284-46ba-872d-dd82136a4ae2"),
                            Endereco = "ayla_caroline_ana_gomes@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("6eac47da-df74-462c-9a8c-f35065e689ab"),
                            ClienteId = new Guid("ff1c5c76-a8d9-46f8-9d3d-ffd0fd002742"),
                            Endereco = "b_etina_flavia_souza@gmail.com"
                        });
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("75f6e8e4-a189-49d3-b666-9ed98fefab78"),
                            Bairro = "Guará I",
                            Cep = "71090-265",
                            Cidade = "Brasília",
                            ClienteId = new Guid("29ac2961-6aaf-4e62-bee7-036f2e0c163a"),
                            Estado = "DF",
                            Logradouro = "Colônia Agrícola Águas Claras Chácara 23, 641"
                        },
                        new
                        {
                            Id = new Guid("b1e767a3-c6ec-4540-96c8-95a6b3f6f1ad"),
                            Bairro = "Tarumã",
                            Cep = "82530-220",
                            Cidade = "Curitiba",
                            ClienteId = new Guid("d84f5433-b284-46ba-872d-dd82136a4ae2"),
                            Estado = "PR",
                            Logradouro = "Praça São Francisco de Assis, 442"
                        },
                        new
                        {
                            Id = new Guid("766da776-8a74-489c-b5e1-0cfe69ad4a57"),
                            Bairro = "Abegay",
                            Cep = "98045-115",
                            Cidade = "Cruz Alta",
                            ClienteId = new Guid("ff1c5c76-a8d9-46f8-9d3d-ffd0fd002742"),
                            Estado = "RS",
                            Logradouro = "Rua Neves, 378"
                        });
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.LogEvento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Momento")
                        .HasColumnType("date");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LogEventos");
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Telefone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Telefones");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8ceff80e-2bdb-4658-93a7-f2bbf15ea412"),
                            ClienteId = new Guid("29ac2961-6aaf-4e62-bee7-036f2e0c163a"),
                            Numero = "(82) 98621-8773"
                        },
                        new
                        {
                            Id = new Guid("11ac5fcd-a436-43cb-b9df-1a444ffc7228"),
                            ClienteId = new Guid("d84f5433-b284-46ba-872d-dd82136a4ae2"),
                            Numero = "(91) 98965-5955"
                        },
                        new
                        {
                            Id = new Guid("e544eb91-cff6-45a1-a825-318e079fd096"),
                            ClienteId = new Guid("ff1c5c76-a8d9-46f8-9d3d-ffd0fd002742"),
                            Numero = "(95) 98234-7636"
                        });
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Documento", b =>
                {
                    b.HasOne("ECommerce.Cliente.Domain.Models.Cliente", "Cliente")
                        .WithOne("Documento")
                        .HasForeignKey("ECommerce.Cliente.Domain.Models.Documento", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Email", b =>
                {
                    b.HasOne("ECommerce.Cliente.Domain.Models.Cliente", "Cliente")
                        .WithOne("Email")
                        .HasForeignKey("ECommerce.Cliente.Domain.Models.Email", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Endereco", b =>
                {
                    b.HasOne("ECommerce.Cliente.Domain.Models.Cliente", "Cliente")
                        .WithOne("Endereco")
                        .HasForeignKey("ECommerce.Cliente.Domain.Models.Endereco", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Telefone", b =>
                {
                    b.HasOne("ECommerce.Cliente.Domain.Models.Cliente", "Cliente")
                        .WithOne("Telefone")
                        .HasForeignKey("ECommerce.Cliente.Domain.Models.Telefone", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Cliente", b =>
                {
                    b.Navigation("Documento");

                    b.Navigation("Email");

                    b.Navigation("Endereco");

                    b.Navigation("Telefone");
                });
#pragma warning restore 612, 618
        }
    }
}
