// <auto-generated />
using System;
using ECommerce.Cliente.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECommerce.Cliente.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf80711d-72fd-4fe6-899f-8e797a695c49"),
                            Ativo = true,
                            Nome = "Davi Giovanni Felipe",
                            Sobrenome = "Fernandes"
                        },
                        new
                        {
                            Id = new Guid("d041eb65-2e2c-4f35-9cce-545070fbdc23"),
                            Ativo = true,
                            Nome = "Ayla Caroline",
                            Sobrenome = "Ana Gomes"
                        },
                        new
                        {
                            Id = new Guid("38da0b16-6382-43b7-93ee-c53bcd0c5b15"),
                            Ativo = true,
                            Nome = "BetinaFlávia",
                            Sobrenome = "Souza"
                        });
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Documentos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4ed5c41-3987-44c1-b134-33fd6d675554"),
                            ClienteId = new Guid("bf80711d-72fd-4fe6-899f-8e797a695c49"),
                            Numero = "903.142.734-92"
                        },
                        new
                        {
                            Id = new Guid("3ecaf44f-103a-4c02-9f7b-c665e4ceefec"),
                            ClienteId = new Guid("d041eb65-2e2c-4f35-9cce-545070fbdc23"),
                            Numero = "668.154.787-77"
                        },
                        new
                        {
                            Id = new Guid("fb0a21dd-8ee5-4516-a8e4-8de4b4cc81f8"),
                            ClienteId = new Guid("38da0b16-6382-43b7-93ee-c53bcd0c5b15"),
                            Numero = "345.712.047-10"
                        });
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Emails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32090bdc-16dc-4d2e-b411-23d32c742fe5"),
                            ClienteId = new Guid("bf80711d-72fd-4fe6-899f-8e797a695c49"),
                            Endereco = "davi_giovanni_felipe@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("b9bd1049-490f-4e44-942c-2e9deaba69cf"),
                            ClienteId = new Guid("d041eb65-2e2c-4f35-9cce-545070fbdc23"),
                            Endereco = "ayla_caroline_ana_gomes@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("e044c872-92d7-4824-98f3-14a0f720ae56"),
                            ClienteId = new Guid("38da0b16-6382-43b7-93ee-c53bcd0c5b15"),
                            Endereco = "b_etina_flavia_souza@gmail.com"
                        });
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d525101d-8095-4cc7-8f80-670c0ccdb3c9"),
                            Bairro = "Guará I",
                            Cep = "71090-265",
                            Cidade = "Brasília",
                            ClienteId = new Guid("bf80711d-72fd-4fe6-899f-8e797a695c49"),
                            Estado = "DF",
                            Logradouro = "Colônia Agrícola Águas Claras Chácara 23, 641"
                        },
                        new
                        {
                            Id = new Guid("b8d83ba3-a29a-489c-a392-1236066c6803"),
                            Bairro = "Tarumã",
                            Cep = "82530-220",
                            Cidade = "Curitiba",
                            ClienteId = new Guid("d041eb65-2e2c-4f35-9cce-545070fbdc23"),
                            Estado = "PR",
                            Logradouro = "Praça São Francisco de Assis, 442"
                        },
                        new
                        {
                            Id = new Guid("82e2f473-cf31-420a-9c17-01c71ff5221c"),
                            Bairro = "Abegay",
                            Cep = "98045-115",
                            Cidade = "Cruz Alta",
                            ClienteId = new Guid("38da0b16-6382-43b7-93ee-c53bcd0c5b15"),
                            Estado = "RS",
                            Logradouro = "Rua Neves, 378"
                        });
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.LogEvento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Momento")
                        .HasColumnType("date");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LogEventos");
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Telefone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Telefones");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d8c132d-db4d-4e1e-beb3-c9d0af5ed2c6"),
                            ClienteId = new Guid("bf80711d-72fd-4fe6-899f-8e797a695c49"),
                            Numero = "(82) 98621-8773"
                        },
                        new
                        {
                            Id = new Guid("b872ea47-f005-4b5f-89c6-56473a809d5e"),
                            ClienteId = new Guid("d041eb65-2e2c-4f35-9cce-545070fbdc23"),
                            Numero = "(91) 98965-5955"
                        },
                        new
                        {
                            Id = new Guid("dbc3c525-d813-4471-9c76-87f5109ecbfe"),
                            ClienteId = new Guid("38da0b16-6382-43b7-93ee-c53bcd0c5b15"),
                            Numero = "(95) 98234-7636"
                        });
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Documento", b =>
                {
                    b.HasOne("ECommerce.Cliente.Domain.Models.Cliente", "Cliente")
                        .WithOne("Documento")
                        .HasForeignKey("ECommerce.Cliente.Domain.Models.Documento", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Email", b =>
                {
                    b.HasOne("ECommerce.Cliente.Domain.Models.Cliente", "Cliente")
                        .WithOne("Email")
                        .HasForeignKey("ECommerce.Cliente.Domain.Models.Email", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Endereco", b =>
                {
                    b.HasOne("ECommerce.Cliente.Domain.Models.Cliente", "Cliente")
                        .WithOne("Endereco")
                        .HasForeignKey("ECommerce.Cliente.Domain.Models.Endereco", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Telefone", b =>
                {
                    b.HasOne("ECommerce.Cliente.Domain.Models.Cliente", "Cliente")
                        .WithOne("Telefone")
                        .HasForeignKey("ECommerce.Cliente.Domain.Models.Telefone", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Cliente.Domain.Models.Cliente", b =>
                {
                    b.Navigation("Documento");

                    b.Navigation("Email");

                    b.Navigation("Endereco");

                    b.Navigation("Telefone");
                });
#pragma warning restore 612, 618
        }
    }
}
