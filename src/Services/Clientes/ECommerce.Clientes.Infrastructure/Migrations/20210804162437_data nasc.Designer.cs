// <auto-generated />
using System;
using ECommerce.Clientes.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECommerce.Clientes.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210804162437_data nasc")]
    partial class datanasc
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("590999e5-8365-42f8-a08c-0e1f463d4d44"),
                            Ativo = true,
                            DataNascimento = new DateTime(1955, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Davi Giovanni Felipe",
                            Sobrenome = "Fernandes"
                        },
                        new
                        {
                            Id = new Guid("8c7f9a0e-f796-4a11-82f6-56db88db9112"),
                            Ativo = true,
                            DataNascimento = new DateTime(1963, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Ayla Caroline",
                            Sobrenome = "Ana Gomes"
                        },
                        new
                        {
                            Id = new Guid("db66191d-b1e1-466f-8efa-9eaa0aa1db1b"),
                            Ativo = true,
                            DataNascimento = new DateTime(1975, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "BetinaFlávia",
                            Sobrenome = "Souza"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Documentos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("46e53615-5e1a-4dde-b68b-cb7fa3a61620"),
                            ClienteId = new Guid("590999e5-8365-42f8-a08c-0e1f463d4d44"),
                            Numero = "903.142.734-92"
                        },
                        new
                        {
                            Id = new Guid("f7fb87a4-8e2d-4f8b-861a-f35f7d02117a"),
                            ClienteId = new Guid("8c7f9a0e-f796-4a11-82f6-56db88db9112"),
                            Numero = "668.154.787-77"
                        },
                        new
                        {
                            Id = new Guid("caca8c60-ee66-44bd-ab47-3e7546a260c4"),
                            ClienteId = new Guid("db66191d-b1e1-466f-8efa-9eaa0aa1db1b"),
                            Numero = "345.712.047-10"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Emails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("846c1d1c-179b-40dd-8a23-6edbe5e49275"),
                            ClienteId = new Guid("590999e5-8365-42f8-a08c-0e1f463d4d44"),
                            Endereco = "davi_giovanni_felipe@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("f04cdec9-a82c-4a56-aad8-7f275538ffd1"),
                            ClienteId = new Guid("8c7f9a0e-f796-4a11-82f6-56db88db9112"),
                            Endereco = "ayla_caroline_ana_gomes@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("7d50d3ff-04f7-4326-ada9-f52f8572e964"),
                            ClienteId = new Guid("db66191d-b1e1-466f-8efa-9eaa0aa1db1b"),
                            Endereco = "b_etina_flavia_souza@gmail.com"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("75ff630b-d83a-4ccf-b9d2-0cf04ede50fb"),
                            Bairro = "Guará I",
                            Cep = "71090-265",
                            Cidade = "Brasília",
                            ClienteId = new Guid("590999e5-8365-42f8-a08c-0e1f463d4d44"),
                            Estado = "DF",
                            Logradouro = "Colônia Agrícola Águas Claras Chácara 23, 641"
                        },
                        new
                        {
                            Id = new Guid("817d5cfc-2819-4d0e-bc66-1ee1c19aee67"),
                            Bairro = "Tarumã",
                            Cep = "82530-220",
                            Cidade = "Curitiba",
                            ClienteId = new Guid("8c7f9a0e-f796-4a11-82f6-56db88db9112"),
                            Estado = "PR",
                            Logradouro = "Praça São Francisco de Assis, 442"
                        },
                        new
                        {
                            Id = new Guid("8c32f287-8d36-49c5-ba31-eb6873d97943"),
                            Bairro = "Abegay",
                            Cep = "98045-115",
                            Cidade = "Cruz Alta",
                            ClienteId = new Guid("db66191d-b1e1-466f-8efa-9eaa0aa1db1b"),
                            Estado = "RS",
                            Logradouro = "Rua Neves, 378"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.LogEvento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("Momento")
                        .HasColumnType("date");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.ToTable("LogEventos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f60583b4-7179-4ce8-8a68-55bb72716da5"),
                            ClienteId = "590999e5-8365-42f8-a08c-0e1f463d4d44",
                            Momento = new DateTime(2021, 8, 4, 13, 24, 36, 652, DateTimeKind.Local).AddTicks(6096),
                            UsuarioId = "fe01b5a0-36dd-4c04-98c2-5871fd66bdb9"
                        },
                        new
                        {
                            Id = new Guid("dce4a001-6407-4e44-9449-5586566d165c"),
                            ClienteId = "8c7f9a0e-f796-4a11-82f6-56db88db9112",
                            Momento = new DateTime(2021, 8, 4, 13, 24, 36, 653, DateTimeKind.Local).AddTicks(7626),
                            UsuarioId = "fe01b5a0-36dd-4c04-98c2-5871fd66bdb9"
                        },
                        new
                        {
                            Id = new Guid("e305e03c-c3de-4837-8a10-c8632348d5c5"),
                            ClienteId = "db66191d-b1e1-466f-8efa-9eaa0aa1db1b",
                            Momento = new DateTime(2021, 8, 4, 13, 24, 36, 653, DateTimeKind.Local).AddTicks(7641),
                            UsuarioId = "fe01b5a0-36dd-4c04-98c2-5871fd66bdb9"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Documento", b =>
                {
                    b.HasOne("ECommerce.Clientes.Domain.Models.Cliente", "Cliente")
                        .WithOne("Documento")
                        .HasForeignKey("ECommerce.Clientes.Domain.Models.Documento", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Email", b =>
                {
                    b.HasOne("ECommerce.Clientes.Domain.Models.Cliente", "Cliente")
                        .WithOne("Email")
                        .HasForeignKey("ECommerce.Clientes.Domain.Models.Email", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Endereco", b =>
                {
                    b.HasOne("ECommerce.Clientes.Domain.Models.Cliente", "Cliente")
                        .WithOne("Endereco")
                        .HasForeignKey("ECommerce.Clientes.Domain.Models.Endereco", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Cliente", b =>
                {
                    b.Navigation("Documento");

                    b.Navigation("Email");

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
