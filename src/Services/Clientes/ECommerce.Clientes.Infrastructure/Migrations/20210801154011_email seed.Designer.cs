// <auto-generated />
using System;
using ECommerce.Clientes.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECommerce.Clientes.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210801154011_email seed")]
    partial class emailseed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("date");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c1469cf-f765-40f2-adb2-c45511e27b4e"),
                            Ativo = true,
                            Nascimento = new DateTime(1955, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Davi Giovanni Felipe",
                            Sobrenome = "Fernandes"
                        },
                        new
                        {
                            Id = new Guid("0df62fab-1b4a-4558-b460-7f42cee0702c"),
                            Ativo = true,
                            Nascimento = new DateTime(1963, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Ayla Caroline",
                            Sobrenome = "Ana Gomes"
                        },
                        new
                        {
                            Id = new Guid("643cff0f-92f9-4b1f-8871-7efed529dd37"),
                            Ativo = true,
                            Nascimento = new DateTime(1975, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "BetinaFlávia",
                            Sobrenome = "Souza"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Documentos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1fb4c6c8-0f8a-4dd5-bed4-5e38791285ef"),
                            ClienteId = new Guid("7c1469cf-f765-40f2-adb2-c45511e27b4e"),
                            Numero = "903.142.734-92"
                        },
                        new
                        {
                            Id = new Guid("e977a1e2-a7cd-4daa-b37b-2ace22393e13"),
                            ClienteId = new Guid("0df62fab-1b4a-4558-b460-7f42cee0702c"),
                            Numero = "668.154.787-77"
                        },
                        new
                        {
                            Id = new Guid("7867833a-95d4-4501-9bf5-6ecb8362edb8"),
                            ClienteId = new Guid("643cff0f-92f9-4b1f-8871-7efed529dd37"),
                            Numero = "345.712.047-10"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f4883cd0-8f7f-4023-ae8d-8799348067af"),
                            Bairro = "Guará I",
                            Cep = "71090-265",
                            Cidade = "Brasília",
                            ClienteId = new Guid("7c1469cf-f765-40f2-adb2-c45511e27b4e"),
                            Estado = "DF",
                            Logradouro = "Colônia Agrícola Águas Claras Chácara 23, 641"
                        },
                        new
                        {
                            Id = new Guid("0e2087ac-297b-48d4-95d6-9cbafba852aa"),
                            Bairro = "Tarumã",
                            Cep = "82530-220",
                            Cidade = "Curitiba",
                            ClienteId = new Guid("0df62fab-1b4a-4558-b460-7f42cee0702c"),
                            Estado = "PR",
                            Logradouro = "Praça São Francisco de Assis, 442"
                        },
                        new
                        {
                            Id = new Guid("b650cdb7-2b58-4d8b-8fce-8eebb45f30ca"),
                            Bairro = "Abegay",
                            Cep = "98045-115",
                            Cidade = "Cruz Alta",
                            ClienteId = new Guid("643cff0f-92f9-4b1f-8871-7efed529dd37"),
                            Estado = "RS",
                            Logradouro = "Rua Neves, 378"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.LogEvento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("Momento")
                        .HasColumnType("date");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.ToTable("LogEventos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e3d69f7-0286-4cad-8c0c-f4801bd8f459"),
                            ClienteId = "7c1469cf-f765-40f2-adb2-c45511e27b4e",
                            Momento = new DateTime(2021, 8, 1, 12, 40, 10, 902, DateTimeKind.Local).AddTicks(4722),
                            UsuarioId = "003a608e-30c5-4deb-b480-65205cfab9cd"
                        },
                        new
                        {
                            Id = new Guid("7a8c2a71-916d-4594-9677-a998d31b6915"),
                            ClienteId = "0df62fab-1b4a-4558-b460-7f42cee0702c",
                            Momento = new DateTime(2021, 8, 1, 12, 40, 10, 909, DateTimeKind.Local).AddTicks(3850),
                            UsuarioId = "003a608e-30c5-4deb-b480-65205cfab9cd"
                        },
                        new
                        {
                            Id = new Guid("7b8c82a3-3071-4245-a42d-2641ef7e12fe"),
                            ClienteId = "643cff0f-92f9-4b1f-8871-7efed529dd37",
                            Momento = new DateTime(2021, 8, 1, 12, 40, 10, 909, DateTimeKind.Local).AddTicks(3866),
                            UsuarioId = "003a608e-30c5-4deb-b480-65205cfab9cd"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Documento", b =>
                {
                    b.HasOne("ECommerce.Clientes.Domain.Models.Cliente", "Cliente")
                        .WithOne("Documento")
                        .HasForeignKey("ECommerce.Clientes.Domain.Models.Documento", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Email", b =>
                {
                    b.HasOne("ECommerce.Clientes.Domain.Models.Cliente", "Cliente")
                        .WithOne("Email")
                        .HasForeignKey("ECommerce.Clientes.Domain.Models.Email", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Endereco", b =>
                {
                    b.HasOne("ECommerce.Clientes.Domain.Models.Cliente", "Cliente")
                        .WithOne("Endereco")
                        .HasForeignKey("ECommerce.Clientes.Domain.Models.Endereco", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Cliente", b =>
                {
                    b.Navigation("Documento");

                    b.Navigation("Email");

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
