// <auto-generated />
using System;
using ECommerce.Clientes.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECommerce.Clientes.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210801154615_email")]
    partial class email
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("date");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba07b2f0-8928-481f-b604-c0bd8b27370a"),
                            Ativo = true,
                            Nascimento = new DateTime(1955, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Davi Giovanni Felipe",
                            Sobrenome = "Fernandes"
                        },
                        new
                        {
                            Id = new Guid("e80b1055-5d13-4bb4-a940-f449dd099f22"),
                            Ativo = true,
                            Nascimento = new DateTime(1963, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Ayla Caroline",
                            Sobrenome = "Ana Gomes"
                        },
                        new
                        {
                            Id = new Guid("dbd6065d-e021-43ea-be6f-cf741b530edd"),
                            Ativo = true,
                            Nascimento = new DateTime(1975, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "BetinaFlávia",
                            Sobrenome = "Souza"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Documentos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f5e38a9-8717-42a4-843a-c62b6b776b10"),
                            ClienteId = new Guid("ba07b2f0-8928-481f-b604-c0bd8b27370a"),
                            Numero = "903.142.734-92"
                        },
                        new
                        {
                            Id = new Guid("87dac7c0-f1fe-48e1-a7d0-e15dee5a332d"),
                            ClienteId = new Guid("e80b1055-5d13-4bb4-a940-f449dd099f22"),
                            Numero = "668.154.787-77"
                        },
                        new
                        {
                            Id = new Guid("0f78ab8a-23d4-41fc-9e25-ff0ceba221d3"),
                            ClienteId = new Guid("dbd6065d-e021-43ea-be6f-cf741b530edd"),
                            Numero = "345.712.047-10"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Emails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("904f2679-4e43-442e-a65b-cc6ecadda001"),
                            ClienteId = new Guid("ba07b2f0-8928-481f-b604-c0bd8b27370a"),
                            Endereco = "davi_giovanni_felipe@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("0fb67b13-9125-487e-a5d3-aa5fcc1dfe7e"),
                            ClienteId = new Guid("e80b1055-5d13-4bb4-a940-f449dd099f22"),
                            Endereco = "ayla_caroline_ana_gomes@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("da638558-3ccb-48e3-960e-5175ab93047f"),
                            ClienteId = new Guid("dbd6065d-e021-43ea-be6f-cf741b530edd"),
                            Endereco = "b_etina_flavia_souza@gmail.com"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("354f1a68-3765-4e47-8c2c-56311e356009"),
                            Bairro = "Guará I",
                            Cep = "71090-265",
                            Cidade = "Brasília",
                            ClienteId = new Guid("ba07b2f0-8928-481f-b604-c0bd8b27370a"),
                            Estado = "DF",
                            Logradouro = "Colônia Agrícola Águas Claras Chácara 23, 641"
                        },
                        new
                        {
                            Id = new Guid("013c755f-414f-4281-804a-4bc1227499d8"),
                            Bairro = "Tarumã",
                            Cep = "82530-220",
                            Cidade = "Curitiba",
                            ClienteId = new Guid("e80b1055-5d13-4bb4-a940-f449dd099f22"),
                            Estado = "PR",
                            Logradouro = "Praça São Francisco de Assis, 442"
                        },
                        new
                        {
                            Id = new Guid("cbdc9ac1-9b01-4331-88ef-4b9eece177d2"),
                            Bairro = "Abegay",
                            Cep = "98045-115",
                            Cidade = "Cruz Alta",
                            ClienteId = new Guid("dbd6065d-e021-43ea-be6f-cf741b530edd"),
                            Estado = "RS",
                            Logradouro = "Rua Neves, 378"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.LogEvento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("Momento")
                        .HasColumnType("date");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.ToTable("LogEventos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("652ddfe9-cbdf-4aa6-8c5e-58af89044bff"),
                            ClienteId = "ba07b2f0-8928-481f-b604-c0bd8b27370a",
                            Momento = new DateTime(2021, 8, 1, 12, 46, 14, 810, DateTimeKind.Local).AddTicks(5573),
                            UsuarioId = "08303b1f-fa0d-402c-b1a5-88210780107a"
                        },
                        new
                        {
                            Id = new Guid("f622ac48-72a0-4a85-a5f0-d6561a4a16d6"),
                            ClienteId = "e80b1055-5d13-4bb4-a940-f449dd099f22",
                            Momento = new DateTime(2021, 8, 1, 12, 46, 14, 811, DateTimeKind.Local).AddTicks(6390),
                            UsuarioId = "08303b1f-fa0d-402c-b1a5-88210780107a"
                        },
                        new
                        {
                            Id = new Guid("4fa86868-a906-4813-ad8a-1406824cffdf"),
                            ClienteId = "dbd6065d-e021-43ea-be6f-cf741b530edd",
                            Momento = new DateTime(2021, 8, 1, 12, 46, 14, 811, DateTimeKind.Local).AddTicks(6406),
                            UsuarioId = "08303b1f-fa0d-402c-b1a5-88210780107a"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Documento", b =>
                {
                    b.HasOne("ECommerce.Clientes.Domain.Models.Cliente", "Cliente")
                        .WithOne("Documento")
                        .HasForeignKey("ECommerce.Clientes.Domain.Models.Documento", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Email", b =>
                {
                    b.HasOne("ECommerce.Clientes.Domain.Models.Cliente", "Cliente")
                        .WithOne("Email")
                        .HasForeignKey("ECommerce.Clientes.Domain.Models.Email", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Endereco", b =>
                {
                    b.HasOne("ECommerce.Clientes.Domain.Models.Cliente", "Cliente")
                        .WithOne("Endereco")
                        .HasForeignKey("ECommerce.Clientes.Domain.Models.Endereco", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Cliente", b =>
                {
                    b.Navigation("Documento");

                    b.Navigation("Email");

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
