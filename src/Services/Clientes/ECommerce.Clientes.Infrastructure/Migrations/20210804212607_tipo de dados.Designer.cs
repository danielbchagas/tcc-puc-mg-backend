// <auto-generated />
using System;
using ECommerce.Clientes.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECommerce.Clientes.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210804212607_tipo de dados")]
    partial class tipodedados
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6d47bc81-81fc-4545-9c64-3c323aa9d260"),
                            Ativo = true,
                            DataNascimento = new DateTime(1955, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Davi Giovanni Felipe",
                            Sobrenome = "Fernandes"
                        },
                        new
                        {
                            Id = new Guid("546aeb4e-a7c3-4c53-a661-c2671b2b7a50"),
                            Ativo = true,
                            DataNascimento = new DateTime(1963, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Ayla Caroline",
                            Sobrenome = "Ana Gomes"
                        },
                        new
                        {
                            Id = new Guid("715f967a-9ff9-4490-a6b2-567efa55c317"),
                            Ativo = true,
                            DataNascimento = new DateTime(1975, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "BetinaFlávia",
                            Sobrenome = "Souza"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Documentos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("48d454ad-b6b8-490a-a350-948898ac7ca1"),
                            ClienteId = new Guid("6d47bc81-81fc-4545-9c64-3c323aa9d260"),
                            Numero = "903.142.734-92"
                        },
                        new
                        {
                            Id = new Guid("68fa8bfc-2871-4183-bdad-ab3310f71df6"),
                            ClienteId = new Guid("546aeb4e-a7c3-4c53-a661-c2671b2b7a50"),
                            Numero = "668.154.787-77"
                        },
                        new
                        {
                            Id = new Guid("54b55a45-2761-4201-9709-52bf836b8306"),
                            ClienteId = new Guid("715f967a-9ff9-4490-a6b2-567efa55c317"),
                            Numero = "345.712.047-10"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Emails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f8fd7c54-ce68-4dd6-97e2-afa0de5794ec"),
                            ClienteId = new Guid("6d47bc81-81fc-4545-9c64-3c323aa9d260"),
                            Endereco = "davi_giovanni_felipe@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("f3e6151a-3c5d-41ea-9995-f684373dcdd2"),
                            ClienteId = new Guid("546aeb4e-a7c3-4c53-a661-c2671b2b7a50"),
                            Endereco = "ayla_caroline_ana_gomes@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("04dde317-6f91-4366-925d-7ca950db10db"),
                            ClienteId = new Guid("715f967a-9ff9-4490-a6b2-567efa55c317"),
                            Endereco = "b_etina_flavia_souza@gmail.com"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c978a3b2-d4a6-4764-8ad4-df5076cbfd76"),
                            Bairro = "Guará I",
                            Cep = "71090-265",
                            Cidade = "Brasília",
                            ClienteId = new Guid("6d47bc81-81fc-4545-9c64-3c323aa9d260"),
                            Estado = "DF",
                            Logradouro = "Colônia Agrícola Águas Claras Chácara 23, 641"
                        },
                        new
                        {
                            Id = new Guid("a5c1af46-0de9-43de-a4ec-a0e7305bc8af"),
                            Bairro = "Tarumã",
                            Cep = "82530-220",
                            Cidade = "Curitiba",
                            ClienteId = new Guid("546aeb4e-a7c3-4c53-a661-c2671b2b7a50"),
                            Estado = "PR",
                            Logradouro = "Praça São Francisco de Assis, 442"
                        },
                        new
                        {
                            Id = new Guid("fe0390f2-dba6-46c8-9dc0-53d06bd1042c"),
                            Bairro = "Abegay",
                            Cep = "98045-115",
                            Cidade = "Cruz Alta",
                            ClienteId = new Guid("715f967a-9ff9-4490-a6b2-567efa55c317"),
                            Estado = "RS",
                            Logradouro = "Rua Neves, 378"
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.LogEvento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<DateTime>("Momento")
                        .HasColumnType("date");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.HasKey("Id");

                    b.ToTable("LogEventos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("078575ef-dab0-4c1d-827e-2ab4b7bc0651"),
                            ClienteId = new Guid("6d47bc81-81fc-4545-9c64-3c323aa9d260"),
                            Momento = new DateTime(2021, 8, 4, 18, 26, 7, 24, DateTimeKind.Local).AddTicks(4309),
                            UsuarioId = new Guid("80e75f75-8340-44af-b97c-b24229b9ebb0")
                        },
                        new
                        {
                            Id = new Guid("2c3336e7-5098-4002-863d-de5135aa36f9"),
                            ClienteId = new Guid("546aeb4e-a7c3-4c53-a661-c2671b2b7a50"),
                            Momento = new DateTime(2021, 8, 4, 18, 26, 7, 26, DateTimeKind.Local).AddTicks(955),
                            UsuarioId = new Guid("80e75f75-8340-44af-b97c-b24229b9ebb0")
                        },
                        new
                        {
                            Id = new Guid("12a60a99-3d91-4337-b740-6a24a8849953"),
                            ClienteId = new Guid("715f967a-9ff9-4490-a6b2-567efa55c317"),
                            Momento = new DateTime(2021, 8, 4, 18, 26, 7, 26, DateTimeKind.Local).AddTicks(978),
                            UsuarioId = new Guid("80e75f75-8340-44af-b97c-b24229b9ebb0")
                        });
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Documento", b =>
                {
                    b.HasOne("ECommerce.Clientes.Domain.Models.Cliente", "Cliente")
                        .WithOne("Documento")
                        .HasForeignKey("ECommerce.Clientes.Domain.Models.Documento", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Email", b =>
                {
                    b.HasOne("ECommerce.Clientes.Domain.Models.Cliente", "Cliente")
                        .WithOne("Email")
                        .HasForeignKey("ECommerce.Clientes.Domain.Models.Email", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Endereco", b =>
                {
                    b.HasOne("ECommerce.Clientes.Domain.Models.Cliente", "Cliente")
                        .WithOne("Endereco")
                        .HasForeignKey("ECommerce.Clientes.Domain.Models.Endereco", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ECommerce.Clientes.Domain.Models.Cliente", b =>
                {
                    b.Navigation("Documento");

                    b.Navigation("Email");

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
