// <auto-generated />
using System;
using ECommerce.Produtos.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECommerce.Produtos.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210726003731_propriedade ativo")]
    partial class propriedadeativo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ECommerce.Produtos.Domain.Models.LogEvento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Momento")
                        .HasColumnType("date");

                    b.Property<string>("OrigemRequisicao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProdutoId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("LogEventos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("faaef97b-168a-4482-98dd-e58c88ba5ebb"),
                            Momento = new DateTime(2021, 7, 25, 21, 37, 31, 421, DateTimeKind.Local).AddTicks(4205),
                            OrigemRequisicao = "ip",
                            ProdutoId = "360a7834-a4b3-46de-a35f-d8c2e538e14b",
                            Uri = "ip/produtos/novo"
                        },
                        new
                        {
                            Id = new Guid("11626341-5241-44be-a91f-bf2c19cebbfd"),
                            Momento = new DateTime(2021, 7, 25, 21, 37, 31, 422, DateTimeKind.Local).AddTicks(6741),
                            OrigemRequisicao = "ip",
                            ProdutoId = "30d523a0-e1ef-407c-9966-e6aff159425e",
                            Uri = "ip/produtos/novo"
                        },
                        new
                        {
                            Id = new Guid("c6914bcb-9ae1-4a87-b42c-ee1fb88440cc"),
                            Momento = new DateTime(2021, 7, 25, 21, 37, 31, 422, DateTimeKind.Local).AddTicks(6761),
                            OrigemRequisicao = "ip",
                            ProdutoId = "7d6680ea-6651-4d17-9252-9d0dae8ad212",
                            Uri = "ip/produtos/novo"
                        },
                        new
                        {
                            Id = new Guid("f2aec7ad-f7ae-4580-a9e3-297bcdeab97d"),
                            Momento = new DateTime(2021, 7, 25, 21, 37, 31, 422, DateTimeKind.Local).AddTicks(6764),
                            OrigemRequisicao = "ip",
                            ProdutoId = "4f64531c-32fe-49fd-8078-96c1f6a61a2d",
                            Uri = "ip/produtos/novo"
                        },
                        new
                        {
                            Id = new Guid("c9d4eb2b-10fa-40d5-b4ed-5366a9f5a756"),
                            Momento = new DateTime(2021, 7, 25, 21, 37, 31, 422, DateTimeKind.Local).AddTicks(6765),
                            OrigemRequisicao = "ip",
                            ProdutoId = "cc5ac4d2-fcc9-4d4a-94d9-ecdbc6e1ed7d",
                            Uri = "ip/produtos/novo"
                        });
                });

            modelBuilder.Entity("ECommerce.Produtos.Domain.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fabricacao")
                        .HasColumnType("date");

                    b.Property<string>("Lote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("360a7834-a4b3-46de-a35f-d8c2e538e14b"),
                            Ativo = true,
                            Fabricacao = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lote = "xxx-5454",
                            Marca = "Pfizer",
                            Nome = "Vacina",
                            Observacao = "Vacina contra COVID-19.",
                            Quantidade = 1000000,
                            Vencimento = new DateTime(2021, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("30d523a0-e1ef-407c-9966-e6aff159425e"),
                            Ativo = true,
                            Fabricacao = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lote = "xxx-5324",
                            Marca = "AstraZeneca",
                            Nome = "Vacina",
                            Observacao = "Vacina contra COVID-19.",
                            Quantidade = 500000,
                            Vencimento = new DateTime(2021, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7d6680ea-6651-4d17-9252-9d0dae8ad212"),
                            Ativo = true,
                            Fabricacao = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lote = "xxx-6654",
                            Marca = "Janssen",
                            Nome = "Vacina",
                            Observacao = "Vacina contra COVID-19.",
                            Quantidade = 1000000,
                            Vencimento = new DateTime(2021, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4f64531c-32fe-49fd-8078-96c1f6a61a2d"),
                            Ativo = true,
                            Fabricacao = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lote = "xxx-1054",
                            Marca = "GlaxoSmithKline",
                            Nome = "Centrum",
                            Observacao = "Suplemento alimentar (multivitamínico).",
                            Quantidade = 1000000,
                            Vencimento = new DateTime(2021, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cc5ac4d2-fcc9-4d4a-94d9-ecdbc6e1ed7d"),
                            Ativo = true,
                            Fabricacao = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lote = "xxx-2154",
                            Marca = "Colgate",
                            Nome = "Enxaguante bucal",
                            Observacao = "Enxaguante bucal.",
                            Quantidade = 1000000,
                            Vencimento = new DateTime(2021, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
